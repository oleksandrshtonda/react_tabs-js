{"version":3,"sources":["components/Tab/Tab.jsx","components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tab","onTabSelected","selectedTabId","tabs","tab","title","className","id","href","onClick","Tabs","map","find","content","App","useState","setSelectedTabId","currentTab","selectedTabID","tabsarr","includes","ReactDOM","render","document","getElementById"],"mappings":"6MAAO,SAASA,EAAT,GAA2D,IAA5CC,EAA2C,EAA3CA,cAAeC,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,KAAMC,EAAO,EAAPA,IAChDC,EAAUD,EAAVC,MAER,OACE,oBACEC,UAAWJ,IAAkBE,EAAIG,GAAK,YAAc,GACpD,UAAQ,MAFV,SAIE,mBACEC,KAAI,WAAMJ,EAAIG,IACd,UAAQ,UACRE,QAAS,kBAAMR,EAAcG,EAAKF,EAAeC,IAHnD,SAKGE,MCXF,IAAMK,EAAO,SAAC,GAAD,IAAGP,EAAH,EAAGA,KAAMD,EAAT,EAASA,cAAeD,EAAxB,EAAwBA,cAAxB,OAClB,sBAAK,UAAQ,gBAAb,UACE,qBAAKK,UAAU,gBAAf,SACE,6BACGH,EAAKQ,KAAI,SAAAP,GAAG,OACX,cAACJ,EAAD,CAEEC,cAAeA,EACfC,cAAeA,EACfE,IAAKA,EACLD,KAAMA,GAJDC,EAAIG,WAUjB,qBAAKD,UAAU,QAAQ,UAAQ,aAA/B,SACGH,EAAKS,MAAK,SAAAR,GAAG,OAAIA,EAAIG,KAAOL,KAAeW,cCZrCV,EAAO,CAClB,CAAEI,GAAI,QAASF,MAAO,QAASQ,QAAS,eACxC,CAAEN,GAAI,QAASF,MAAO,QAASQ,QAAS,eACxC,CAAEN,GAAI,QAASF,MAAO,QAASQ,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAASZ,EAAK,GAAGI,IAA3D,mBAAOL,EAAP,KAAsBc,EAAtB,KAWA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBH,EAAKS,MAAK,SAAAR,GAAG,OAAIA,EAAIG,KAAOL,KAAeG,SAGjE,cAAC,EAAD,CACEF,KAAMA,EACND,cAAeA,EACfD,cAnBgB,SAACgB,EAAYC,EAAeC,GAC5CA,EAAQR,KAAI,SAAAP,GAAG,OAAIA,EAAIG,MAAIa,SAASH,EAAWV,IAC7CU,EAAWV,KAAOW,GACpBF,EAAiBC,EAAWV,IAG9BS,EAAiB,gBClBvBK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.92f70980.chunk.js","sourcesContent":["export function Tab({ onTabSelected, selectedTabId, tabs, tab }) {\n  const { title } = tab;\n\n  return (\n    <li\n      className={selectedTabId === tab.id ? 'is-active' : ''}\n      data-cy=\"Tab\"\n    >\n      <a\n        href={`#${tab.id}`}\n        data-cy=\"TabLink\"\n        onClick={() => onTabSelected(tab, selectedTabId, tabs)}\n      >\n        {title}\n      </a>\n    </li>\n  );\n}\n","import { Tab } from '../Tab/Tab';\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }) => (\n  <div data-cy=\"TabsComponent\">\n    <div className=\"tabs is-boxed\">\n      <ul>\n        {tabs.map(tab => (\n          <Tab\n            key={tab.id}\n            onTabSelected={onTabSelected}\n            selectedTabId={selectedTabId}\n            tab={tab}\n            tabs={tabs}\n          />\n        ))}\n      </ul>\n    </div>\n\n    <div className=\"block\" data-cy=\"TabContent\">\n      {tabs.find(tab => tab.id === selectedTabId).content}\n    </div>\n  </div>\n);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\n\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const onTabSelected = (currentTab, selectedTabID, tabsarr) => {\n    if (tabsarr.map(tab => tab.id).includes(currentTab.id)) {\n      if (currentTab.id !== selectedTabID) {\n        setSelectedTabId(currentTab.id);\n      }\n    } else {\n      setSelectedTabId('tab-1');\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabs.find(tab => tab.id === selectedTabId).title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}